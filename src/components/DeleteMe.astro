---
import { Image } from "astro:assets";
import ExternalLink from "@utils/ExternalLink.astro";
import gitHub from "@images/github.svg";
import logoDark from "@images/astronaut-logo-dark.svg";
import logoLight from "@images/astronaut-logo-light.svg";

const currentYear = new Date().getFullYear();
---

<div class="wrapper">

  <main id="main">

    
    
    

    <section aria-label="Pre-Commit Hooks">
      <h2 id="hooks">Pre-Commit Hooks <span aria-hidden="true">üê∂</span></h2>
      <p>
        Commiting to something can sometimes take a lot of effort. Commiting
        code is no exception, but at least here we can pull out the safety net
        to soften our fall in case we made a mistake. In this case it's running
        <code>npm run build</code> (powered by <ExternalLink
          href="https://typicode.github.io/husky/"
          name="Husky"
        />), which will look for the following things in your project BEFORE the
        project is build and BEFORE your code is being commited:
      </p>
      <ul id="hooks-list">
        <li>Errors <span aria-hidden="true">üö®</span></li>
        <li>Warnings <span aria-hidden="true">‚ö†Ô∏è</span></li>
        <li>Hints <span aria-hidden="true">üí°</span></li>
      </ul>
    </section>

    <section aria-label="Prettier Config">
      <h2 id="prettier">Prettier Config <span aria-hidden="true">üíÖ</span></h2>
      <p>
        I don't know about you, but if my code is not nicely formatted after
        hitting save, I'm starting to feel very weird. Which is why this comes
        with a Prettier configuration, in case you're using it. Or a you one of
        those people who do this manually?!
      </p>
    </section>

    <section aria-label="">
      <h2 id="seo">SEO <span aria-hidden="true">üîç</span></h2>
      <p>
        Predefined values for improved search engine optimisation can be found
        in
        <code>Layout.astro</code>. These settings have been my reliable
        companion for a couple of years now and I put a lot of research, work
        and testing into it.
      </p>
    </section>

    <section aria-label="Security Headers">
      <h2 id="security">Security Headers <span aria-hidden="true">üîí</span></h2>
      <p>
        Better safe than sorry, am I right? There are multiple ways to add
        security headers to your website and I decided to store them in a
        <code>vercel.json</code> file, cause this website was deployed to (you guessed
        it) <ExternalLink href="https://vercel.com/" name="Vercel" />. It
        contains the following headers, feel free to adjust them to your needs:
      </p>
      <ul>
        <li>Content-Security-Policy</li>
        <li>X-Frame-Options</li>
        <li>X-Content-Type-Options</li>
        <li>Referrer-Policy</li>
        <li>Permissions-Policy</li>
      </ul>
    </section>

    <section aria-label="Usability">
      <h2 id="usability">Usability <span aria-hidden="true">üåê</span></h2>
      <p>
        I've added a bunch of handy utilities which will not only improve
        usability, but accessibility as well:
      </p>
      <ol>
        <li>"Back to top" button</li>
        <li>External link (showing icon)</li>
        <li>Improved focus behaviour *</li>
        <li>Skip link</li>
      </ol>
      <p>
        Very proud of the the <code>ExternalLink.astro</code> component, as it handles
        a couple of use cases:
      </p>
      <ul>
        <li><code>aira-label</code> info for external link</li>
        <li>Adjustable font and icon size</li>
        <li>Lets you configure the <code>rel</code> attribute</li>
      </ul>
      <p class="smol">
        * Thanks to <ExternalLink
          href="https://css-tricks.com/standardizing-focus-styles-with-css-custom-properties/"
          iconSize="18px"
          name="Stephanie Eckles"
        /> & <ExternalLink
          href="https://codepen.io/argyleink/pen/JjEzeLp"
          iconSize="18px"
          name="Adam Argyle"
        />
      </p>
    </section>
  </main>
</div>

<footer>
  <p>&copy; {currentYear} Steve Frenzel (MIT License)</p>
</footer>

<style>
  .wrapper {
    margin: 0 auto;
    max-width: 768px;
    padding: 0 var(--space-s);
  }

  img {
    height: auto;
    margin: var(--space-l) 0;
  }

  section {
    margin: var(--space-2xl) 0;
  }

  .button-wrapper {
    margin: var(--space-xl) 0;
  }

  #template-button {
    align-items: center;
    background: var(--color-green);
    border-radius: var(--border-radius);
    box-shadow: 0px 0px 30px 0px var(--color-green);
    color: var(--color-white);
    display: flex;
    flex-wrap: wrap;
    font-size: var(--step-2);
    gap: var(--space-xs);
    margin: 0 auto;
    padding: var(--space-2xs) var(--space-xs);
    text-decoration: none;
    width: fit-content;
  }

  #template-button:focus,
  #template-button:hover {
    box-shadow: none;
  }

  #template-button img {
    margin: 0;
  }

  #template-text {
    font-size: var(--step-0);
    margin: var(--space-2xs) auto 0 auto;
    width: fit-content;
  }

  #template-text a {
    font-size: var(--step-0);
  }

  #template-text a::after {
    content: " ‚Ü™";
  }

  h2 {
    margin-bottom: var(--space-xs);
  }

  p {
    margin: 0;
  }

  p + p {
    margin-top: var(--space-s);
  }

  pre {
    background: var(--color-grey-dark);
    border: 1px solid var(--color-grey-light);
    border-radius: var(--border-radius);
    font-size: var(--step-0);
    color: var(--color-yellow);
    overflow: auto;
    padding: var(--space-s);
    white-space: nowrap;
  }

  code {
    word-break: break-all;
  }

  .code-block {
    color: var(--color-yellow) !important;
  }

  li {
    margin: 0;
  }

  .smol {
    font-size: var(--step-0);
  }

  footer {
    border-top: 1px solid var(--color-grey-dark);
    text-align: center;
    margin-top: var(--space-3xl);
    padding: var(--space-l) 0;
  }

  footer p {
    font-size: var(--step-0);
  }

  .light {
    display: none;
  }
  .dark {
    display: initial;
  }

  @media (prefers-color-scheme: light) {
    .light {
      display: initial;
    }
    .dark {
      display: none;
    }
    #template-button {
      background: var(--color-orange);
      box-shadow: 0px 0px 30px 0px var(--color-orange);
      color: var(--color-black);
    }
    #template-button img {
      filter: invert(1);
    }
  }

  @media (prefers-contrast: more) {
    #template-button {
      background: darkgreen;
      box-shadow: 0px 0px 30px 0px darkgreen;
      color: #fff;
    }
  }
</style>
